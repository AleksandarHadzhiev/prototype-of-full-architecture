services:

  postgresql-master:
    container_name: master
    build:
      context: ./
      dockerfile: Dockerfile.sql
    restart: always
    ports:
      - '5432:5432'
    volumes:
      - postgresql_master_data:/bitnami/postgresql
      - ./db.sql:/docker-entrypoint-initdb.d/db.sql
    environment:
      - POSTGRESQL_PGAUDIT_LOG=READ,WRITE
      - POSTGRESQL_LOG_HOSTNAME=true
      - POSTGRESQL_REPLICATION_MODE=master
      - POSTGRESQL_REPLICATION_USER=repl_user
      - POSTGRESQL_REPLICATION_PASSWORD=repl_user
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_PASSWORD=postgres
      - POSTGRESQL_DATABASE=development_database
      - ALLOW_EMPTY_PASSWORD=yes

  postgresql-slave:
    container_name: slave_1
    image: bitnami/postgresql
    restart: always
    ports:
      - '59141:5432'
    depends_on:
      - postgresql-master
    environment:
      - POSTGRESQL_PASSWORD=postgres
      - POSTGRESQL_MASTER_HOST=postgresql-master
      - POSTGRESQL_PGAUDIT_LOG=READ
      - POSTGRESQL_LOG_HOSTNAME=true
      - POSTGRESQL_REPLICATION_MODE=slave
      - POSTGRESQL_REPLICATION_USER=repl_user
      - POSTGRESQL_REPLICATION_PASSWORD=repl_user
      - POSTGRESQL_MASTER_PORT_NUMBER=5432
      - ALLOW_EMPTY_PASSWORD=yes
  postgresql-slave-2:
    container_name: slave_2
    image: bitnami/postgresql
    restart: always
    ports:
      - '59142:5432'
    depends_on:
      - postgresql-master
    environment:
      - POSTGRESQL_PASSWORD=postgres
      - POSTGRESQL_MASTER_HOST=postgresql-master
      - POSTGRESQL_PGAUDIT_LOG=READ
      - POSTGRESQL_LOG_HOSTNAME=true
      - POSTGRESQL_REPLICATION_MODE=slave
      - POSTGRESQL_REPLICATION_USER=repl_user
      - POSTGRESQL_REPLICATION_PASSWORD=repl_user
      - POSTGRESQL_MASTER_PORT_NUMBER=5432
      - ALLOW_EMPTY_PASSWORD=yes
  backend-1:
    container_name: backend-1
    build:
      context: ./backend
      dockerfile: Dockerfile
    expose:
      - "8080"
    ports:
      - "8080:8080"
    restart: "always"
  backend-2:
    container_name: backend-2
    build:
      context: ./backend
      dockerfile: Dockerfile
    expose:
      - "8080"
    ports:
      - "8081:8080"
    restart: "always"
  reverse-proxy:
    container_name: reverse-proxy
    build:
      context: ./reverse-proxy
      dockerfile: Dockerfile
    expose:
      - "8000"
    ports:
      - "8000:8000"
    restart: "always"
  web-server-1:
    container_name: web-1
    build:
      context: ./web-server
      dockerfile: Dockerfile
    expose:
      - "3000"
    ports:
      - "3000:3000"
    restart: "always"
  web-server-2:
    container_name: web-2
    build:
      context: ./web-server
      dockerfile: Dockerfile
    expose:
      - "3000"
    ports:
      - "3001:3000"
    restart: "always"
  forward-proxy:
    container_name: forward-proxy
    build:
      context: ./forward-proxy
      dockerfile: Dockerfile
    environment: 
      - BASE_URL=http://localhost:5000
      - TARGET=http://web-1:3000/, http://web-2:3000/
      - ENV=docker
    expose:
      - "5000"
    ports:
      - "5000:5000"
    restart: "always"